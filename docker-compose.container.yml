# Docker Compose for AdmuseEasy Development and Testing

version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: admuse-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: admuse-easy
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - admuse-network

  # AdmuseEasy Application
  admuse-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: admuse-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/admuse-easy?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-for-development
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./server/logs:/app/logs
    networks:
      - admuse-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: admuse-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - admuse-app
    networks:
      - admuse-network

volumes:
  mongodb_data:
    driver: local

networks:
  admuse-network:
    driver: bridge