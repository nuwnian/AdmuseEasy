# Docker Compose for AdmuseEasy Development

services:
  # Main application
  admuse-app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-change-this-password}@mongodb:27017/admuse?authSource=admin
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - JWT_SECRET=${JWT_SECRET:-development-secret-key}
      - SENTRY_DSN=${SENTRY_DSN}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - app-data:/app/data
    depends_on:
      - mongodb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Local MongoDB (optional - for development)
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    volumes:
      - mongodb-data:/data/db
    restart: unless-stopped

  # Nginx reverse proxy (commented out for development)
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/ssl/certs
  #   depends_on:
  #     - admuse-app
  #   restart: unless-stopped

volumes:
  app-data:
  mongodb-data: